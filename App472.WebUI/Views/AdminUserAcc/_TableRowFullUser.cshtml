@using App472.WebUI.Models;
@model App472.WebUI.Models.FullUser

<tr class="mgAccTable" data-uid="@Model.AppUser.Id" data-isguest="false">
    <td class="">@Model.AppUser.Id</td>

    <td class="mgAccUserCell">
        @Html.TextBoxFor(m => m.AppUser.UserName, new {@class = "form-control", @autocomplete="off", @id="UserName_"+Model.AppUser.Id, @style = "max-width:140px;" })
    </td>
    <td class="">
        <input disabled='disabled' value="User" autocomplete="off" class="form-control" id="" name="" style="max-width: 140px; background-color: unset;" type="text">
    </td>

    <td class="mgAccEmailCell">
        @Html.TextBoxFor(m => m.AppUser.Email, new { @class = "form-control", @autocomplete="off", @id="Email_"+Model.AppUser.Id })
    </td>
    <td class="text-center">
        @Model.AppUser.EmailConfirmed
    </td>

    <td class="mgAccPhoneCell">
        @Html.TextBoxFor(m => m.AppUser.PhoneNumber, new { @class = "form-control", @autocomplete="off", @id="Phone_"+Model.AppUser.Id, @style="max-width:140px;" })
    </td>
    <td class="text-center">@Model.AppUser.PhoneNumberConfirmed</td>

    <td class="text-center">@Model.AppUser.TwoFactorEnabled</td>
    @{
        // The dates saved into db are created as UTC nullable DateTime. Here we convert them back to (UTC+08:00) Perth
        var localTimeString = "unknown";
        try{
            DateTime convertedDate = (DateTime)Model.AppUser.LockoutEndDateUtc;
            DateTime localTime = convertedDate.ToLocalTime();
            localTimeString = localTime.ToString();
        }
        catch (Exception e){
            localTimeString = "";
        }
    }
    <td id="lockoutUTC-@Model.AppUser.Id">@localTimeString</td>

    <td class="">
        <div class="btn-group mgLockedOutBtn" id="LockoutEnabled-@Model.AppUser.Id" data-userid="@Model.AppUser.Id" data-lockoutenabled="@Model.AppUser.LockoutEnabled" style="width:65px;">
            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false">
                @{ var lockoutText = Model.AppUser.LockoutEnabled ? "Yes" : "No"; }
                @lockoutText
            </button>
            @{
                var trueActive = Model.AppUser.LockoutEnabled ? "active" : "";
                var falseActive = Model.AppUser.LockoutEnabled ? "" : "active";
            }
            <div class="dropdown-menu">
                <a class="dropdown-item @trueActive" href="#" data-lockout="true">Yes</a>
                <a class="dropdown-item @falseActive" href="#" data-lockout="false">No</a>
            </div>
        </div>
    </td>
    <td class="text-center" id="accessFailed-@Model.AppUser.Id">@Model.AppUser.AccessFailedCount</td>

    <td class="text-center">@Model.Orders.Count()</td>
    <td class="text-center">
        <a href="@Url.Action("Index", "AdminUserOrder", new{UserId = Model.AppUser.Id})">View Orders</a>
    </td>
</tr>