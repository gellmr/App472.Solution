@using App472.WebUI.Domain.Entities
@model App472.WebUI.Models.ProductsListViewModel

@{
    // render a page fragment (only this view with no layout) if it was an Ajax call.
    if(ViewBag.IsFragment){
        Layout = null;
    }
    ViewBag.Title = "Products";
}

@{
    var currCat = String.IsNullOrEmpty(Model.CurrentCategory) ? "All" : Model.CurrentCategory;
    var hostAndPath = ViewBag.HostAndPath;
    var searchStr = String.IsNullOrEmpty(ViewBag.Search) ? "" : ViewBag.Search;
}
@hostAndPath
<div class="mg-curr-category" data-hostandpath="@hostAndPath" >Category: @currCat</div>
<div class="searchInput">
    <i class="bi bi-search"></i>&nbsp;@Html.TextBox("SearchInput", null, new
    {
        @class = "form-control searchInput",
        @id = "productSearchInput",
        Name = "productSearchInput",
        Value=searchStr
    })
    <button type="button" class="btn btn-sm btn-light search-x"><i class="bi bi-x-lg"></i></button>
</div>

@if (Model.PagingInfo.TotalItems > 4)
{
    <div class="btn-group pull-right mg-pagination">
        @Html.PageLinks(Model.PagingInfo, x => Url.Action("List", new { page = x, category = Model.CurrentCategory }))
    </div>
    <div style="margin-bottom:10px;"></div>
}

Total: @Model.PagingInfo.TotalItems Products found.

@foreach (var p in Model.Products)
{
    @Html.Partial("_ProductSummary", p)
}

@if (Model.PagingInfo.TotalItems > 4)
{
    <div class="btn-group pull-right mg-pagination">
        @Html.PageLinks(Model.PagingInfo, x => Url.Action("List", new { page = x, category = Model.CurrentCategory }))
    </div>
}
<div style="margin-bottom:10px;"></div>
